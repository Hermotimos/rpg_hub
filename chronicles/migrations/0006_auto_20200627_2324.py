# Generated by Django 2.2.1 on 2020-06-27 21:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('toponomikon', '0015_auto_20200627_2324'),
        ('chronicles', '0005_auto_20200627_2159'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_plural', models.CharField(max_length=100)),
                ('order_no', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.RemoveField(
            model_name='era',
            name='chronology',
        ),
        migrations.RemoveField(
            model_name='period',
            name='era',
        ),
        migrations.CreateModel(
            name='ChronologySystem',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('chronicles.event',),
        ),
        migrations.AlterModelOptions(
            name='event',
            options={'ordering': ['type__order_no', 'date_start']},
        ),
        migrations.RenameField(
            model_name='date',
            old_name='abs_year_traegharon',
            new_name='year',
        ),
        migrations.AddField(
            model_name='date',
            name='day',
            field=models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(90)]),
        ),
        migrations.AddField(
            model_name='date',
            name='season',
            field=models.CharField(blank=True, choices=[('1', 'Wiosna'), ('2', 'Lato'), ('3', 'Jesie≈Ñ'), ('4', 'Zima')], max_length=6, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='date_end',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events_ended', to='chronicles.Date'),
        ),
        migrations.AddField(
            model_name='event',
            name='date_start',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='events_started', to='chronicles.Date'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='in_event',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='chronicles.Event'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='name',
            field=models.CharField(default=1, max_length=256),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='name_genetive',
            field=models.CharField(default=1, max_length=256),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='primary_locations',
            field=models.ManyToManyField(related_name='events_as_primary_loc', to='toponomikon.PrimaryLocation'),
        ),
        migrations.AddField(
            model_name='event',
            name='secondary_locations',
            field=models.ManyToManyField(related_name='events_as_secondary_loc', to='toponomikon.SecondaryLocation'),
        ),
        migrations.AlterUniqueTogether(
            name='date',
            unique_together={('year', 'season', 'day')},
        ),
        migrations.DeleteModel(
            name='Chronology',
        ),
        migrations.DeleteModel(
            name='Era',
        ),
        migrations.DeleteModel(
            name='Period',
        ),
        migrations.RemoveField(
            model_name='date',
            name='day_end',
        ),
        migrations.RemoveField(
            model_name='date',
            name='day_end_season',
        ),
        migrations.RemoveField(
            model_name='date',
            name='day_start',
        ),
        migrations.RemoveField(
            model_name='date',
            name='day_start_season',
        ),
        migrations.AddField(
            model_name='event',
            name='type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='chronicles.EventType'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together={('name', 'type')},
        ),
        migrations.CreateModel(
            name='Era',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('chronicles.event',),
        ),
        migrations.RemoveField(
            model_name='event',
            name='date',
        ),
        migrations.RemoveField(
            model_name='event',
            name='primary_locations',
        ),
        migrations.RemoveField(
            model_name='event',
            name='secondary_locations',
        ),
    ]
