# Generated by Django 2.2.1 on 2020-06-27 13:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('toponomikon', '0014_secondarylocation'),
        ('chronicles', '0003_auto_20200627_1546'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chronology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Date',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abs_year_traegharon', models.IntegerField()),
                ('day_start', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(90)])),
                ('day_start_season', models.CharField(choices=[('1', 'Wiosna'), ('2', 'Lato'), ('3', 'Jesień'), ('4', 'Zima')], max_length=6)),
                ('day_end', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(90)])),
                ('day_end_season', models.CharField(choices=[('1', 'Wiosna'), ('2', 'Lato'), ('3', 'Jesień'), ('4', 'Zima')], max_length=6)),
            ],
            options={
                'unique_together': {('abs_year_traegharon', 'day_start', 'day_start_season', 'day_end', 'day_end_season')},
            },
        ),
        migrations.CreateModel(
            name='Era',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('name_genetive', models.CharField(max_length=256)),
                ('year_start_to_traegharon_era_start', models.IntegerField()),
                ('year_start_in_chronology', models.IntegerField()),
                ('year_end_in_chronology', models.IntegerField(blank=True, null=True)),
                ('chronology', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='eras', to='chronicles.Chronology')),
            ],
            options={
                'ordering': ['chronology', 'year_start_to_traegharon_era_start'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('name_genetive', models.CharField(max_length=256)),
                ('year_start_in_era', models.IntegerField()),
                ('year_end_in_era', models.IntegerField(blank=True, null=True)),
                ('era', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='periods', to='chronicles.Era')),
            ],
            options={
                'ordering': ['era', 'year_start_in_era'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='historical_events', to='chronicles.Date')),
                ('primary_locations', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='events_as_primary_loc', to='toponomikon.PrimaryLocation')),
                ('secondary_locations', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events_as_secondary_loc', to='toponomikon.SecondaryLocation')),
            ],
        ),
    ]
