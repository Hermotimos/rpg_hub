# Generated by Django 4.0.2 on 2022-03-23 18:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    # replaces = [('communications', '0001_initial'), ('communications', '0002_auto_20211020_1651'), ('communications', '0003_auto_20211020_1704'), ('communications', '0004_auto_20211021_1932'), ('communications', '0005_auto_20211026_2032'), ('communications', '0006_auto_20211113_1314'), ('communications', '0007_auto_20211113_2050'), ('communications', '0008_auto_20211114_1152'), ('communications', '0009_auto_20211114_1619'), ('communications', '0010_alter_threadtag_color'), ('communications', '0011_auto_20220101_1115'), ('communications', '0012_alter_threadtag_unique_together'), ('communications', '0013_auto_20220106_1352'), ('communications', '0014_alter_thread_topic'), ('communications', '0015_auto_20220109_1758'), ('communications', '0016_alter_debate_options'), ('communications', '0017_announcementstatement_debatestatement_and_more')]

    initial = True

    dependencies = [
        ('users', '0001_initial_squashed'),
        # ('users', '0014_alter_profile_options'),
        # ('users', '0013_auto_20211023_1358'),
    ]

    operations = [
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=50)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='users.profile')),
                ('voters_no', models.ManyToManyField(blank=True, related_name='options_votes_no', to='users.Profile')),
                ('voters_yes', models.ManyToManyField(blank=True, related_name='options_votes_yes', to='users.Profile')),
            ],
            options={
                'ordering': ['text'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('order_no', models.SmallIntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order_no', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('kind', models.CharField(choices=[('Debate', 'Debate'), ('Demand', 'Demand'), ('Announcement', 'Announcement')], max_length=15)),
                ('created_at', models.DateTimeField(null=True)),
                ('is_ended', models.BooleanField(default=False)),
                ('is_exclusive', models.BooleanField(default=False)),
                ('followers', models.ManyToManyField(blank=True, related_name='threads_followed', to='users.Profile')),
                ('known_directly', models.ManyToManyField(related_name='threads_known_directly', to='users.Profile')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='communications.topic')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
                'verbose_name': 'ANNOUNCEMENT',
                'verbose_name_plural': 'ANNOUNCEMENTS',
            },
            bases=('communications.thread',),
        ),
        migrations.CreateModel(
            name='Debate',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
                'ordering': ['created_at'],
                'verbose_name': 'DEBATE',
                'verbose_name_plural': 'DEBATES',
            },
            bases=('communications.thread',),
        ),
        migrations.CreateModel(
            name='ThreadTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('color', models.CharField(default='#000000', max_length=7)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thread_tags', to='users.profile')),
                ('kind', models.CharField(choices=[('Announcement', 'Announcement'), ('Debate', 'Debate'), ('Demand', 'Demand')], default=1, max_length=15)),
            ],
            options={
                'ordering': ['kind', 'author', 'title'],
                'unique_together': {('title', 'author', 'kind')},
            },
        ),
        migrations.AddField(
            model_name='thread',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='threads', to='communications.ThreadTag'),
        ),
        migrations.AlterField(
            model_name='thread',
            name='kind',
            field=models.CharField(choices=[('Announcement', 'Announcement'), ('Debate', 'Debate'), ('Demand', 'Demand')], max_length=15),
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='post_pics')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='statements', to='users.profile')),
                ('options', models.ManyToManyField(blank=True, related_name='threads', to='communications.Option')),
                ('seen_by', models.ManyToManyField(blank=True, related_name='statements_seen', to='users.Profile')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='communications.thread')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AlterField(
            model_name='thread',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.RemoveField(
            model_name='thread',
            name='topic',
        ),
        migrations.DeleteModel(
            name='Topic',
        ),
        migrations.CreateModel(
            name='AnnouncementStatement',
            fields=[
            ],
            options={
                'verbose_name': 'ANNOUNCEMENT STATEMENT',
                'verbose_name_plural': 'ANNOUNCEMENT STATEMENTS',
                'ordering': ['created_at'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('communications.statement',),
        ),
        migrations.CreateModel(
            name='DebateStatement',
            fields=[
            ],
            options={
                'verbose_name': 'DEBATE STATEMENT',
                'verbose_name_plural': 'DEBATE STATEMENTS',
                'ordering': ['created_at'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('communications.statement',),
        ),
    ]
