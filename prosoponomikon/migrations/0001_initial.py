# Generated by Django 4.0.2 on 2022-04-18 19:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('rules', '0001_initial'),
        ('toponomikon', '0001_initial'),
        ('knowledge', '0001_initial_squashed'),
        ('users', '0001_initial_squashed'),
    ]

    operations = [
        migrations.CreateModel(
            name='AffixGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affix', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('UNISEX', 'UNISEX')], default='MALE', max_length=20)),
            ],
            options={
                'ordering': ['name_group', 'type', 'affix'],
            },
        ),
        migrations.CreateModel(
            name='AuxiliaryNameGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('social_info', models.TextField(blank=True, help_text='Social group indication if no location', null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='toponomikon.location')),
            ],
            options={
                'ordering': ['social_info', 'location'],
            },
        ),
        migrations.CreateModel(
            name='FamilyNameGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='FirstNameGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, unique=True)),
                ('type', models.CharField(choices=[('local', 'local'), ('racial', 'racial'), ('social', 'social')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='FirstName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(max_length=250, unique=True)),
                ('form_2', models.CharField(blank=True, max_length=250, null=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('is_ancient', models.BooleanField(default=False)),
                ('affix_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='first_names', to='prosoponomikon.affixgroup')),
                ('auxiliary_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='prosoponomikon.auxiliarynamegroup')),
            ],
            options={
                'ordering': ['auxiliary_group', 'form'],
            },
        ),
        migrations.CreateModel(
            name='FamilyName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(max_length=250, unique=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prosoponomikon.familynamegroup')),
                ('locations', models.ManyToManyField(blank=True, related_name='family_names', to='toponomikon.Location')),
            ],
            options={
                'ordering': ['group', 'form'],
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cognomen', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sorting_name', models.CharField(blank=True, max_length=250, null=True)),
                ('biography_packets', models.ManyToManyField(blank=True, related_name='characters', to='knowledge.BiographyPacket')),
                ('dialogue_packets', models.ManyToManyField(blank=True, related_name='characters', to='knowledge.DialoguePacket')),
                ('family_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='characters', to='prosoponomikon.familyname')),
                ('first_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='characters', to='prosoponomikon.firstname')),
                ('frequented_locations', models.ManyToManyField(blank=True, related_name='frequented_by_characters', to='toponomikon.Location')),
                ('informees', models.ManyToManyField(blank=True, related_name='characters_informed', to='users.Profile')),
                ('participants', models.ManyToManyField(blank=True, related_name='characters_participated', to='users.Profile')),
                ('professions', models.ManyToManyField(blank=True, related_name='characters', to='rules.Profession')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'verbose_name': '* CHARACTER',
                'verbose_name_plural': '* CHARACTERS',
                'ordering': ['sorting_name'],
            },
        ),
        migrations.AddField(
            model_name='affixgroup',
            name='name_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='affix_groups', to='prosoponomikon.firstnamegroup'),
        ),
        migrations.CreateModel(
            name='NonGMCharacter',
            fields=[
            ],
            options={
                'verbose_name': '--- Player or NPC',
                'verbose_name_plural': '--- Players and NPCs',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('prosoponomikon.character',),
        ),
        migrations.CreateModel(
            name='NPCCharacter',
            fields=[
            ],
            options={
                'verbose_name': '--- NPC',
                'verbose_name_plural': '--- NPCs',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('prosoponomikon.character',),
        ),
        migrations.CreateModel(
            name='PlayerCharacter',
            fields=[
            ],
            options={
                'verbose_name': '--- Player',
                'verbose_name_plural': '--- Players',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('prosoponomikon.character',),
        ),
        migrations.AlterUniqueTogether(
            name='affixgroup',
            unique_together={('affix', 'type', 'name_group')},
        ),
    ]
