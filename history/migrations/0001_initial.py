# Generated by Django 2.2.1 on 2020-03-25 17:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('imaginarion', '0001_initial'),
        ('users', '0001_initial'),
        ('toponomikon', '0001_initial'),
        ('debates', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_no', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='site_features_pics')),
            ],
            options={
                'ordering': ['chapter_no'],
            },
        ),
        migrations.CreateModel(
            name='ChronicleEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_no_in_game', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField(max_length=10000)),
                ('debate', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='chronicle_event', to='debates.Debate')),
            ],
            options={
                'ordering': ['game', 'event_no_in_game'],
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_no', models.IntegerField(null=True)),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateField(blank=True, null=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='game_sessions', to='history.Chapter')),
            ],
            options={
                'ordering': ['game_no'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_ended', models.BooleanField(default=False)),
                ('sorting_name', models.CharField(blank=True, max_length=250, null=True, unique=True)),
            ],
            options={
                'ordering': ['sorting_name'],
            },
        ),
        migrations.CreateModel(
            name='TimelineEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('season', models.CharField(choices=[('1', 'Wiosna'), ('2', 'Lato'), ('3', 'Jesień'), ('4', 'Zima')], max_length=10)),
                ('day_start', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(90)])),
                ('day_end', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(90)])),
                ('description', models.TextField(max_length=4000)),
                ('game', models.ForeignKey(default=35, on_delete=django.db.models.deletion.PROTECT, related_name='timeline_events', to='history.GameSession')),
                ('general_locations', models.ManyToManyField(related_name='timeline_events', to='toponomikon.GeneralLocation')),
                ('informed', models.ManyToManyField(blank=True, limit_choices_to=models.Q(('status', 'active_player'), ('status', 'inactive_player'), _connector='OR'), related_name='timeline_events_informed', to='users.Profile')),
                ('participants', models.ManyToManyField(blank=True, limit_choices_to=models.Q(('status', 'active_player'), ('status', 'inactive_player'), ('status', 'dead_player'), _connector='OR'), related_name='timeline_events_participated', to='users.Profile')),
                ('specific_locations', models.ManyToManyField(related_name='timeline_events', to='toponomikon.SpecificLocation')),
                ('threads', models.ManyToManyField(blank=True, related_name='timeline_events', to='history.Thread')),
            ],
            options={
                'ordering': ['year', 'season', 'day_start', 'day_end', 'description', 'game'],
            },
        ),
        migrations.CreateModel(
            name='TimelineEventNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=4000, null=True)),
                ('color', models.CharField(choices=[('#000000', 'czarny'), ('#C70039', 'czerwony'), ('#800080', 'fioletowy'), ('#000080', 'granatowy'), ('#2e86c1', 'niebieski'), ('#FFC300', 'pomarańczowy'), ('#808080', 'szary'), ('#229954', 'zielony')], default='#C70039', max_length=20)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events_notes', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notes', to='history.TimelineEvent')),
            ],
        ),
        migrations.CreateModel(
            name='ChronicleEventNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, max_length=4000, null=True)),
                ('color', models.CharField(choices=[('#000000', 'czarny'), ('#C70039', 'czerwony'), ('#800080', 'fioletowy'), ('#000080', 'granatowy'), ('#2e86c1', 'niebieski'), ('#FFC300', 'pomarańczowy'), ('#808080', 'szary'), ('#229954', 'zielony')], default='#C70039', max_length=20)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chronicle_events_notes', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notes', to='history.ChronicleEvent')),
            ],
        ),
        migrations.AddField(
            model_name='chronicleevent',
            name='game',
            field=models.ForeignKey(default=35, on_delete=django.db.models.deletion.PROTECT, related_name='chronicle_events', to='history.GameSession'),
        ),
        migrations.AddField(
            model_name='chronicleevent',
            name='informed',
            field=models.ManyToManyField(blank=True, limit_choices_to=models.Q(('status', 'active_player'), ('status', 'inactive_player'), ('status', 'dead_player'), _connector='OR'), related_name='chronicle_events_informed', to='users.Profile'),
        ),
        migrations.AddField(
            model_name='chronicleevent',
            name='participants',
            field=models.ManyToManyField(blank=True, limit_choices_to=models.Q(('status', 'active_player'), ('status', 'inactive_player'), ('status', 'dead_player'), _connector='OR'), related_name='chronicle_events_participated', to='users.Profile'),
        ),
        migrations.AddField(
            model_name='chronicleevent',
            name='pictures',
            field=models.ManyToManyField(blank=True, related_name='chronicle_events_pics', to='imaginarion.Picture'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['year', 'season', 'day_start', 'day_end', 'description', 'game'], name='history_tim_year_5bff84_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['year'], name='history_tim_year_4aed5b_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['season'], name='history_tim_season_2e1411_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['day_start'], name='history_tim_day_sta_c713f0_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['day_end'], name='history_tim_day_end_49acb1_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['description'], name='history_tim_descrip_b1d304_idx'),
        ),
        migrations.AddIndex(
            model_name='timelineevent',
            index=models.Index(fields=['game'], name='history_tim_game_id_c1d141_idx'),
        ),
    ]
